<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.cdsunrise.ztyg.acquisition.usermanage.mapper.RoleMapper">
	<resultMap id="BaseResultMap" type="net.cdsunrise.ztyg.acquisition.usermanage.domain.Role">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="edit_time" jdbcType="TIMESTAMP" property="editTime" />
		<result column="version" jdbcType="INTEGER" property="version"/>
	</resultMap>

	<sql id="Base_Column_List">
		id, code, name, create_time, edit_time,version
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role where id = #{id}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from sys_role where id = #{id}
	</delete>
	
	<delete id="deleteByPrimaryKeys" parameterType="list">
		delete from sys_role where id in
		<foreach collection="array" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
	
	<insert id="insert" parameterType="net.cdsunrise.ztyg.acquisition.usermanage.domain.Role" useGeneratedKeys="true" keyProperty="id">
		insert into sys_role (code, name, create_time, edit_time, version)
		values (#{code}, #{name}, #{createTime}, #{editTime}, #{version})
	</insert>

	<insert id="insertSelective" parameterType="net.cdsunrise.ztyg.acquisition.usermanage.domain.Role" useGeneratedKeys="true" keyProperty="id">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="code != null">
				code,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="editTime != null">
				edit_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="code != null">
				#{code},
			</if>
			<if test="name != null">
				#{name},
			</if>
			<if test="createTime != null">
				#{createTime},
			</if>
			<if test="editTime != null">
				#{editTime},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="net.cdsunrise.ztyg.acquisition.usermanage.domain.Role">
		update sys_role
		<set>
			<if test="code != null">
				code = #{code},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="editTime != null">
				edit_time = #{editTime},
			</if>
		</set>
		where id = #{id}
	</update>

	<update id="updateByPrimaryKey" parameterType="net.cdsunrise.ztyg.acquisition.usermanage.domain.Role">
		update sys_role set code = #{code}, name = #{name}, edit_time =
		#{editTime}, version = version+1 where id = #{id} and version =#{version}
	</update>

	<select id="countByOrConditionSelective" parameterType="hashmap"
		resultType="java.lang.Integer">
		select count(*) from sys_role
		<where>
			<if test="id != null">
				id != #{id} and (
			</if>
			<if test="name != null">
				name = #{name}
			</if>
			<if test="code != null">
				or code = #{code}
			</if>
			<if test="id != null">
				)
			</if>
		</where>
	</select>
	
	<insert id="insertToRR" parameterType="map">
		insert into sys_role_resource (role_id, resource_id) values
		<foreach collection="array" item="item" index="index" separator="," > 
        (#{roleId},#{item}) 
    	</foreach> 
	</insert>
	
	<delete id="deleteByRoleIdFromRR" parameterType="java.lang.Long">
		delete from sys_role_resource where role_id = #{roleId}
	</delete>
	
	<delete id="deleteByRoleIdsFromRR" parameterType="list">
		delete from sys_role_resource where role_id in
		<foreach collection="array" item="roleId" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</delete>
	
	<delete id="deleteByRoleIdFromUR" parameterType="java.lang.Long">
		delete from sys_user_role where role_id = #{roleId}
	</delete>
	
	<delete id="deleteByRoleIdsFromUR" parameterType="list">
		delete from sys_user_role where role_id in
		<foreach collection="array" item="roleId" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</delete>
	
	<select id="findRolesByUserIdFromUR" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user_role t left join sys_role ur on t.role_id =ur.id  where t.user_id = #{userId}
	</select>
	
	<select id="findByParams" parameterType="map"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
		<where>
			<if test="name != null and name != ''">
				name like "%"#{name}"%"
			</if>
			<if test="code != null and code != ''">
				and code like "%"#{code}"%"
			</if>
		</where>
		order by id desc
	</select>
	
	<select id="selectByRoleIdFromRR" parameterType="java.lang.Long" resultType="java.lang.Long">
		select resource_id from sys_role_resource where role_id = #{roleId}
	</select>
	
	<select id="selectByResourceIdsFromRR" parameterType="list" resultType="java.lang.Long">
		select resource_id from sys_role_resource where resource_id in
		<foreach collection="array" item="resourceId" open="(" separator=","
			close=")">
			#{resourceId}
		</foreach>
	</select>
	
	<select id="selectByRoleIdsFromUR" parameterType="list" resultType="java.lang.Long">
		select role_id from sys_user_role where role_id in
		<foreach collection="array" item="roleId" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</select>
	
</mapper>